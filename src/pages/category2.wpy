<template>
    <view class="page">
        <view class="page-body">
            <repeat for="{{list}}" key="index" index="index" item="item">
                <navigator wx:if="{{!isEditing}}" url="./account?id={{item.id}}&name={{item.name}}">
                    <category-item :item="item"/>
                </navigator>
                <view wx:else class="category-item {{mainx === index? 'mainmove':'mainend'}}"
                      bindtouchstart="movestart({{index}})"
                      bindtouchmove="move"
                      bindtouchend="moveend({{index}})"
                      wx:data-productid="101"
                      style="left:0; top:{{start.y}}px">
                    <view class="category-item-inner">
                        <view class="item-icon">
                            <view class="icon">
                                <image src="{{item.icon}}"></image>
                            </view>
                        </view>
                        <view class="item-title">
                            <text wx:if="{{!isEditing}}">{{item.name}}</text>
                            <input wx:else value="{{item.name}}"/>
                        </view>
                    </view>
                </view>
            </repeat>
        </view>
        <view class="page-footer">
            <view wx:if="{{!isEditing}}" class="footer-wrap">
                <view class="fleft">
                </view>
                <view class="fright" bindtap="startEdit()">
                    编辑
                </view>
            </view>
            <view wx:else class="footer-wrap">
                <view class="fleft" bindtap="cancelEdit()">
                    取消
                </view>
                <view class="fright" bindtap="doneEdit()">
                    完成
                </view>
            </view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import categoryApi from '../apis/categoryApi';
    import utils from '../lib/utils';
    import CategoryItem from '../components/category-item';

    var x, y, x1, y1, x2, y2, index, currindex, n, yy;
    var arr1 = [];

    export default class Category extends wepy.page {

        config = {
            navigationBarTitleText: '分组列表'
        };

        components = {
            'category-item': CategoryItem
        };

        data = {
            list: [],
            isEditing: false,

            isMoving: false,

            mainx: '',
            start: {x: 0, y: 0},
            n: null
        };

        methods = {
            startEdit() {
                this.isEditing = true;
            },
            doneEdit() {
                this.isEditing = false;

            },
            cancelEdit() {
                this.isEditing = false;

            },
            itemClick(item) {
                if (!this.isEditing) {
                    wx.navigateTo({
                        url: `./account?id=${item.id}&name=${item.name}`,
                    });
                }
            },

            movestart: function (index, e) {
                console.log('movestart');
                console.log(this.list, index, e);
                currindex = index;
                x = e.touches[0].clientX;
                y = e.touches[0].clientY;
                x1 = e.currentTarget.offsetLeft;
                y1 = e.currentTarget.offsetTop;
            },
            move: function (e) {
                console.log('move');
                this.isMoving = true;

                yy = e.currentTarget.offsetTop;
                x2 = e.touches[0].clientX - x + x1;
                y2 = e.touches[0].clientY - y + y1;
                this.mainx = currindex;
                this.opacity = 0.5;
                this.start = {x: x2, y: y2};

                var n = 1;
                for (var k = 2; k < this.list.length; k++) {
                    if (y2 > (60 * (k - 1) + k * 2 - 30)) {
                        n = k;
                    }
                }
                this.n = n;


            },
            moveend: function (e) {
                if (!this.isMoving) return;

                console.log('moveend', e);
                if (y2 !== 0) {
                    console.log('y2:', y2);
                    var arr = this.data.list.slice(0);
                    var len = arr.length;
                    n = 1;
                    for (var k = 2; k < len; k++) {
                        if (y2 > (60 * (k - 1) + k * 2 - 30)) {
                            n = k;
                        }
                    }
                    console.log('n:', n);

                    if (y2 > (52 * (len - 1) + len * 2 - 26)) {
                        n = len;
                    }

                    var cur = arr[currindex];

                    arr.splice(currindex, 1);
                    arr.splice((n - 1), 0, cur);
                    arr1 = [];
                    for (var m = 0; m < arr.length; m++) {
                        arr[m].sort = m;
                    }

                    console.log(arr);

                    this.mainx = '';
                    this.list = arr;
                    this.opacity = 1;
                }
            }
        };

        async onLoad() {
            utils.showLoading();
            const result = await categoryApi.list();
            utils.hideLoading();

            this.list = result.data;
            this.$apply();
        }
    }
</script>

<style type="less">
    @import '../style/weui.less';

    .page {
        display: flex;
        flex-direction: column;
        height: 100%;
    }

    .page-body {
        flex: 1;
    }

    .page-footer {
        display: flex;
        background-color: #999999;
        justify-content: space-between;
        height: ~'90rpx';

        .footer-wrap {
            display: flex;
            justify-content: space-between;
            flex-grow: 1;
            .fleft {
                display: flex;
                justify-content: center;
                align-items: center;
                width: 50%;
                background-color: #EF4F4F;
            }

            .fright {
                display: flex;
                justify-content: center;
                align-items: center;
                width: 50%;
                background-color: #0BB20C;
            }
        }
    }

    .category-item {
        display: flex;
        height: ~'120rpx';

        .category-item-inner {
            display: flex;
            flex-grow: 1;
            box-sizing: border-box;
            margin-left: ~'36rpx';
            border-bottom: 1px solid @weuiLineColorLight;
        }

        .item-icon {
            display: flex;
            justify-content: center;
            align-items: center;

            .icon {
                width: ~'90rpx';
                height: ~'90rpx';
                background-color: @weuiBgColorDefault;
                border-radius: 50%;
                display: flex;
                justify-content: center;
                align-items: center;

                image {
                    width: 100%;
                    height: 100%;
                }
            }

        }

        .item-title {
            display: flex;
            justify-content: space-between;
            flex-grow: 1;
            padding-left: ~'30rpx';
            padding-right: ~'40rpx';

            text {
                display: flex;
                align-items: center;
                padding-right: ~'20rpx';
                font-size: @weuiFontSize;
                color: @weuiTextColorTitle;
            }

            input {

            }

        }
        .item-count {
            .count {
                display: flex;
                align-items: center;
                font-size: @weuiFontSizeSm;
                color: @weuiTextColorWarn;
            }
        }
    }

    .mainmove {
        display: flex;
        height: ~'120rpx';
        position: absolute;
        background-color: #0ff;
        width: 100%;
        z-index: 10;
        opacity: 0.5;

    }

    .mainend {
        display: flex;
        height: ~'120rpx';
        position: inherit;
        opacity: 1;
    }


</style>
