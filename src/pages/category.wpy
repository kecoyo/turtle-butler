<template>
    <view class="page">
        <view class="page-body">
            <repeat for="{{list}}" key="index" index="index" item="item">
                <view wx:if="{{isEditing}}">
                    <div wx:if="{{toIndex == index && startIndex >= index}}" class="category-item">
                        <view class="bottom-border"></view>
                    </div>
                    <view class="category-item {{startIndex == index ? 'mainmove':'mainend'}}"
                          style="{{'left:0; top:'+ dragTop +'px'}}">
                        <view class="bottom-border">
                            <view class="item-icon">
                                <view class="icon" bindtap="selectIcon({{index}})">
                                    <image src="{{iconUrl + item.icon}}"></image>
                                </view>
                            </view>
                            <view class="item-title">
                                <input value="{{item.name}}" bindinput="input({{index}})"/>
                            </view>
                            <view class="item-drag" catchtouchstart="movestart({{index}})" catchtouchmove="move"
                                  catchtouchend="moveend">
                                <icon class="iconfont icon-tuodong"></icon>
                            </view>
                        </view>
                    </view>
                    <div wx:if="{{toIndex == index && startIndex < index}}" class="category-item">
                        <view class="bottom-border"></view>
                    </div>
                </view>
                <navigator wx:else url="./account?categoryId={{item.id}}&categoryName={{item.name}}">
                    <view class="category-item">
                        <view class="bottom-border">
                            <view class="item-icon">
                                <view class="icon">
                                    <image src="{{iconUrl + item.icon}}"></image>
                                </view>
                            </view>
                            <view class="item-title">
                                <text>{{item.name}}</text>
                            </view>
                            <view class="item-count">
                                <text class="count">{{item.count}}</text>
                            </view>
                        </view>
                    </view>
                </navigator>
            </repeat>
        </view>

        <view class="op-footer">
            <block wx:if="{{!isEditing}}">
                <view class="op-left">
                </view>
                <view class="op-right">
                    <view class="op" bindtap="startEdit()">编辑</view>
                </view>
            </block>
            <block wx:else>
                <view class="op-left">
                    <view class="op" bindtap="cancelEdit()">取消</view>
                </view>
                <view class="op-right">
                    <view class="op" bindtap="doneEdit()">完成</view>
                </view>
            </block>
        </view>

    </view>
</template>

<script>
    import wepy from 'wepy';
    import categoryApi from '../apis/categoryApi';
    import utils from '../lib/utils';

    let y, y1, y2;

    // 列表元素高度
    let itemHeight = utils.rem2px(120);

    export default class Category extends wepy.page {

        config = {
            navigationBarTitleText: '分组列表'
        };

        data = {
            list: [],
            iconUrl: '',

            isEditing: false,

            startIndex: -1, // 原始位置
            toIndex: -1, // 目标位置
            dragTop: -1, // 拖动元素的top
        };

        methods = {
            startEdit() {
                this.isEditing = true;
                this.listCopy = this.list.slice(0);
            },
            doneEdit() {

                let data = this.list.map((item, i) => ({
                    id: item.id,
                    name: item.name,
                    icon: item.icon
                }));

                utils.showLoading();
                categoryApi.saveAll(data)
                    .then(result => {
                        utils.hideLoading();
                        utils.showToast('保存成功', 'success');
                    })
                    .catch(() => {
                        utils.showToast('保存失败');
                    });

                this.isEditing = false;

            },
            cancelEdit() {
                this.isEditing = false;
                this.list = this.listCopy;
            },
            input(index, e) {
                console.log(index, e);
                this.list[index].name = e.detail.value;
            },
            itemTap(item) {
                if (!this.isEditing) {
                    wx.navigateTo({
                        url: `./account?id=${item.id}&name=${item.name}`,
                    });
                }
            },
            movestart: function (index, e) {
                if (!this.isEditing) return;

                y = e.touches[0].clientY;
                y1 = e.currentTarget.offsetTop;
                y2 = e.touches[0].clientY - y + y1;

                this.startIndex = index;
                this.toIndex = index;
                this.dragTop = y2;

            },
            move: function (e) {
                if (!this.isEditing) return;

                y2 = e.touches[0].clientY - y + y1;

                var toIndex = 0;
                for (var i = 1; i < this.list.length; i++) {
                    if (y2 > (itemHeight * (i - 1) + itemHeight / 2)) {
                        toIndex = i;
                    }
                }

                this.dragTop = y2;
                this.toIndex = toIndex;
            },
            moveend: function (e) {
                if (!this.isEditing) return;

                var item = this.list[this.startIndex];
                this.list.splice(this.startIndex, 1);
                this.list.splice(this.toIndex, 0, item);

                this.startIndex = -1;
                this.toIndex = -1;
                this.dragTop = -1;
            },
            selectIcon(index, e) {
                this.editIndex = index;
                wx.navigateTo({
                    url: 'select-icon'
                });
            },
            selectIcon_callback(icon) {
                console.log(this.iconUrl + icon);
                this.list[this.editIndex].icon = icon;
            }
        };

        async onLoad() {
            utils.showLoading();
            const result = await categoryApi.list();
            utils.hideLoading();

            this.list = result.data;
            this.iconUrl = result.iconUrl;
            this.$apply();
        }
    }
</script>

<style type="less">
    @import '../style/weui.less';

    .page {
        display: flex;
        flex-direction: column;
        height: 100%;
    }

    .page-body {
        flex: 1;
    }

    .page-footer {
        display: flex;
        background-color: @weuiBgColorActive;
        justify-content: space-between;
        height: ~'90rpx';
        border-top: ~'1rpx' solid @weuiLineColorLight;

        .footer-wrap {
            display: flex;
            justify-content: space-between;
            flex-grow: 1;
            .fleft {
                display: flex;
                justify-content: center;
                align-items: center;
                width: 50%;
                border-right: ~'1rpx' solid @weuiLineColorLight;
            }

            .fright {
                display: flex;
                justify-content: center;
                align-items: center;
                width: 50%;
            }
        }
    }

    .category-item {
        display: flex;
        height: ~'120rpx';

        .bottom-border {
            display: flex;
            flex-grow: 1;
            box-sizing: border-box;
            margin-left: ~'36rpx';
            border-bottom: 1px solid @weuiLineColorLight;
        }

        .item-icon {
            display: flex;
            justify-content: center;
            align-items: center;

            .icon {
                width: ~'90rpx';
                height: ~'90rpx';
                background-color: @weuiBgColorDefault;
                border-radius: 50%;
                display: flex;
                justify-content: center;
                align-items: center;

                image {
                    width: 100%;
                    height: 100%;
                }
            }

        }

        .item-title {
            display: flex;
            justify-content: space-between;
            flex-grow: 1;
            padding-left: ~'30rpx';
            padding-right: ~'40rpx';
            box-sizing: border-box;

            text {
                display: flex;
                align-items: center;
                padding-right: ~'20rpx';
                font-size: @weuiFontSize;
                color: @weuiTextColorTitle;
                box-sizing: border-box;
                margin-top: -1px;
            }

            input {
                width: 100%;
                height: 100%;
                font-size: @weuiFontSize;
                border: 0;
                padding: 0;
                margin: 0;
                box-sizing: border-box;
            }

        }
        .item-count {
            display: flex;
            justify-content: center;
            align-items: center;
            width: ~'60rpx';
            margin-right: ~'15rpx';

            .count {
                display: flex;
                align-items: center;
                font-size: @weuiFontSize;
                color: @weuiTextColorWarn;
            }
        }

        .item-drag {
            display: flex;
            align-items: center;
            width: ~'60rpx';

            icon {
                font-size: @weuiFontSizeXL;
            }
        }
    }

    .mainmove {
        display: flex;
        height: ~'120rpx';
        position: absolute;
        width: 100%;
        z-index: 10;
        opacity: 0.6;
        box-shadow: 0px 0px 20px #333333;

    }

    .mainend {
        display: flex;
        height: ~'120rpx';
        position: inherit;
        opacity: 1;
    }


</style>
